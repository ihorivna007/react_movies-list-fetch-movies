{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovie","_useState7","_useState8","error","setError","_useState9","_useState10","foundMovie","setFoundMovie","onFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newMovie","wrap","_context","prev","next","preventDefault","sent","Title","Plot","Poster","imdbID","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","e","target","disabled","onClick","App","setMovies","hasMovie","find","m","curr","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4959481b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7f429e60';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { MovieData } from '../../types/MovieData';\n\nconst defaultPicture\n= 'https://via.placeholder.com/360x270.png?text=no%20preview';\nconst root = 'https://www.imdb.com/title/';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [foundMovie, setFoundMovie] = useState(false);\n\n  const onFormSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const newMovie = await getMovie(query) as MovieData;\n\n      if ('Error' in newMovie) {\n        throw new Error();\n      }\n\n      setFoundMovie(true);\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster !== 'N/A'\n          ? newMovie.Poster\n          : defaultPicture,\n        imdbUrl: `${root}${newMovie.imdbID}`,\n        imdbId: newMovie.imdbID,\n      });\n    } catch (e) {\n      setError(true);\n      setMovie(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const addOnClick = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setFoundMovie(false);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const onQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onFormSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={onQueryChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              {foundMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addOnClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const hasMovie = movies.find(m => m.imdbId === movie.imdbId);\n\n    if (movie && !hasMovie) {\n      setMovies(curr => [...curr, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}